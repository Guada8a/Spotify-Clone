---
import MusicsTable from "@/components/MusicsTable.astro";
import Layout from "../../layouts/Layout.astro";

import { allPlaylists, songs } from "@/lib/data";
import { CardPlayButton } from "@/components/CardPlayButton";

const { id } = Astro.params;

const playlist = allPlaylists.find((playlist) => playlist.id === id);
const playListSongs = songs.filter(
	(song) => song.albumId === playlist?.albumId
);

//Poner la duracion de la playlist
const duration = playListSongs.reduce((acc, song) => {
    const [minutes, seconds] = song.duration.split(":");
    return acc + Number(minutes) * 60 + Number(seconds);
}, 0);

//Poner el tiempo total de la playlist
const hours = Math.floor(duration / 3600);
const minutes = Math.floor((duration % 3600) / 60);
const seconds = Math.floor((duration % 3600) % 60);

---

<Layout title="Spotify Astro">
	<div
		id="playlist-container"
		class="relative flex flex-col h-full bg-zinc-900 overflow-x-hidden"
		transition:name=`playlist ${id} box`
	>
		<!-- <PageHeader/> -->
		<header class="flex flex-row gap-8 px-6 mt-12">
			<picture class="aspect-square w-52 h-52 flex-none">
				<img
					src={playlist?.cover}
					alt={`Cover of ${playlist?.title}`}
					class="object-cover w-full h-full shadow-lg"
					transition:name=`playlist ${playlist?.id} image`
				/>
			</picture>

			<div class="flex flex-col justify-between">
				<h2 class="flex flex-1 items-end">Playlist</h2>
				<div>
					<h1 class="text-5xl font-bold block text-white">
						{playlist?.title}
						<span transition:name=`playlist ${playlist?.id} title`></span>
					</h1>
				</div>

				<div class="flex-1 flex items-end">
					<div class="text-sm text-gray-300 font-normal">
						<div transition:name=`playlist ${playlist?.id} artists`>
							<span>{playlist?.artists.join(", ")}</span>
						</div>
						<p class="mt-1">
							<span class="text-white">{playListSongs.length} canciones</span>,
							<span class="text-white">
                                {hours > 0 && `${hours} horas`} {minutes} minutos {seconds}{" "}
                                segundos
                            </span>
						</p>
					</div>
				</div>
			</div>
		</header>
        <div class="pl-6 pt-6">
            <CardPlayButton id={id} client:load size="large"/>
        </div>
        
		<div class="relative z-10 px-6 pt-10"></div>
		<div
			class="absolute inset-0 bg-gradient-to-t from-zinc-900 via-zinc-900/80 -z-[1]"
		>
		</div>
        <div class="p-5">
            <!-- Si no hay canciones mostrar mensaje, pero si tiene al menos una poner el musicTable-->
            {playListSongs.length === 0 ? (
                <div class="flex flex-col items-center justify-center h-full">
                    <h1 class="text-3xl font-bold text-white">
                        No hay canciones en esta playlist
                    </h1>
                </div>
            ) : (
                <MusicsTable songs={playListSongs} />
            )}

        </div>
	</div>
</Layout>

<style></style>
